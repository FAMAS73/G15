import streamlit as st
import pandas as pd
from fpdf import FPDF
from datetime import datetime
import calendar
import os

# ---------- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ú‡πà‡∏≠‡∏ô ----------


def get_installment_schedule(total_price, down_payment):
    remaining = total_price - down_payment
    full_installments = remaining // 1000
    last_payment = remaining % 1000

    amounts = [1000] * full_installments
    if last_payment > 0:
        amounts.append(last_payment)

    today = datetime.today()
    due_dates = []
    for i in range(len(amounts)):
        month = (today.month + i) % 12 or 12
        year = today.year + ((today.month + i - 1) // 12)
        month_name = calendar.month_name[month]
        due_dates.append(f"{month_name} {year}")

    df = pd.DataFrame({
        "‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà": [f"{i+1}" for i in range(len(amounts))],
        "‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏î‡∏∑‡∏≠‡∏ô": due_dates,
        "‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞ (‡∏ö‡∏≤‡∏ó)": amounts
    })
    return df, amounts, due_dates

# ---------- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á PDF ----------


def export_to_pdf(total_price, down_payment, table_df, buyer_name, image_path):
    pdf = FPDF()
    pdf.add_page()
    pdf.add_font("THSarabun", "", "THSarabunNew.ttf", uni=True)
    pdf.set_font("THSarabun", size=16)

    pdf.cell(200, 10, txt="‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ú‡πà‡∏≠‡∏ô‡πÇ‡∏ô‡πâ‡∏ï‡∏ö‡∏∏‡πä‡∏Ñ (‡∏â‡∏ö‡∏±‡∏ö‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á)", ln=True, align="C")
    pdf.ln(5)
    pdf.cell(200, 10, txt=f"‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠: {buyer_name}", ln=True)
    pdf.cell(200, 10, txt=f"‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°: {total_price:,} ‡∏ö‡∏≤‡∏ó", ln=True)
    pdf.cell(200, 10, txt=f"‡πÄ‡∏á‡∏¥‡∏ô‡∏î‡∏≤‡∏ß‡∏ô‡πå: {down_payment:,} ‡∏ö‡∏≤‡∏ó", ln=True)
    pdf.cell(
        200, 10, txt=f"‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ú‡πà‡∏≠‡∏ô: {total_price - down_payment:,} ‡∏ö‡∏≤‡∏ó", ln=True)
    pdf.ln(5)

    if os.path.exists(image_path):
        pdf.image(image_path, w=100)
        pdf.ln(5)

    pdf.set_font("THSarabun", size=14)
    pdf.multi_cell(0, 8, txt="""
‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç:
1. ‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ú‡πà‡∏≠‡∏ô‡∏ä‡∏≥‡∏£‡∏∞‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢
2. ‡∏á‡∏ß‡∏î‡∏ú‡πà‡∏≠‡∏ô‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡∏à‡∏≤‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏≥‡∏™‡∏±‡∏ç‡∏ç‡∏≤
3. ‡∏´‡∏≤‡∏Å‡∏ú‡∏¥‡∏î‡∏ô‡∏±‡∏î‡πÄ‡∏Å‡∏¥‡∏ô 2 ‡∏á‡∏ß‡∏î‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÅ‡∏à‡πâ‡∏á ‡∏à‡∏∞‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏ú‡∏¥‡∏î‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç
4. ‡∏´‡πâ‡∏≤‡∏°‡∏Ç‡∏≤‡∏¢/‡∏à‡∏≥‡∏ô‡∏≥/‡πÇ‡∏≠‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏£‡∏ö
5. ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏û‡∏π‡∏î‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ

‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞:
""")

    pdf.set_font("THSarabun", size=12)
    for i, row in table_df.iterrows():
        pdf.cell(
            0, 8, f"‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà {row['‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà']}: {row['‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏î‡∏∑‡∏≠‡∏ô']} - {row['‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞ (‡∏ö‡∏≤‡∏ó)']:,} ‡∏ö‡∏≤‡∏ó", ln=True)

    pdf.ln(10)
    pdf.cell(0, 10, txt="_____________________     _____________________", ln=True)
    pdf.cell(
        0, 10, txt="      ‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠                             ‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏ã‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠", ln=True)

    file_name = "contract_export.pdf"
    pdf.output(file_name)
    return file_name


# ---------- Streamlit UI ----------
st.set_page_config(page_title="‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ú‡πà‡∏≠‡∏ô", page_icon="üíª")
st.title("üìÑ ‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ú‡πà‡∏≠‡∏ô Asus ROG Zephyrus G15")

# UI inputs
buyer_name = st.text_input("üë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠")
down_payment = st.number_input(
    "üíµ ‡πÄ‡∏á‡∏¥‡∏ô‡∏î‡∏≤‡∏ß‡∏ô‡πå (‡∏ö‡∏≤‡∏ó)", min_value=0, max_value=16000, step=500, value=1500)
image_path = st.file_uploader(
    "üñºÔ∏è ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÇ‡∏ô‡πâ‡∏ï‡∏ö‡∏∏‡πä‡∏Ñ (JPG/PNG)", type=["jpg", "png"])

# ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏î‡∏≤‡∏ß‡∏ô‡πå
if down_payment >= 5000:
    total_price = 16000
elif down_payment >= 4500:
    total_price = 16500
elif down_payment >= 3000:
    total_price = 17000
else:
    total_price = 17500

# ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ú‡πà‡∏≠‡∏ô
df, amounts, months = get_installment_schedule(total_price, down_payment)

st.markdown(f"‚úÖ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°: **{total_price:,} ‡∏ö‡∏≤‡∏ó**")
st.markdown(f"üí∏ ‡πÄ‡∏á‡∏¥‡∏ô‡∏î‡∏≤‡∏ß‡∏ô‡πå: **{down_payment:,} ‡∏ö‡∏≤‡∏ó**")
st.markdown(f"üìÜ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏á‡∏ß‡∏î: **{len(amounts)} ‡∏á‡∏ß‡∏î**")

st.dataframe(df, use_container_width=True)

# ‡∏õ‡∏∏‡πà‡∏° export PDF
if st.button("üì§ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤ PDF"):
    if buyer_name.strip() == "":
        st.warning("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠")
    elif image_path is None:
        st.warning("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á")
    else:
        # Save uploaded image temporarily
        temp_image_path = "uploaded_image.jpg"
        with open(temp_image_path, "wb") as f:
            f.write(image_path.getbuffer())

        file_path = export_to_pdf(
            total_price, down_payment, df, buyer_name, temp_image_path)
        with open(file_path, "rb") as f:
            st.download_button("üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏±‡∏ç‡∏ç‡∏≤ PDF", f, file_name=file_path)
